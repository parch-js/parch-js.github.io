{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","parch-web/tests/helpers/destroy-app.js","parch-web/tests/helpers/module-for-acceptance.js","parch-web/tests/helpers/resolver.js","parch-web/tests/helpers/start-app.js","parch-web/tests/test-helper.js","parch-web/tests/unit/routes/getting-started/index-test.js","parch-web/tests/unit/routes/getting-started/page-test.js","parch-web/tests/unit/routes/guide/index-test.js","parch-web/tests/unit/routes/guide/page-test.js","parch-web/tests/unit/routes/index-test.js","parch-web/tests/unit/services/scroller-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('parch-web/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('parch-web/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'parch-web/tests/helpers/start-app', 'parch-web/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _parchWebTestsHelpersStartApp, _parchWebTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _parchWebTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _parchWebTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('parch-web/tests/helpers/resolver', ['exports', 'parch-web/resolver', 'parch-web/config/environment'], function (exports, _parchWebResolver, _parchWebConfigEnvironment) {\n\n  var resolver = _parchWebResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _parchWebConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _parchWebConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('parch-web/tests/helpers/start-app', ['exports', 'ember', 'parch-web/app', 'parch-web/config/environment'], function (exports, _ember, _parchWebApp, _parchWebConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _parchWebConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _parchWebApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('parch-web/tests/test-helper', ['exports', 'parch-web/tests/helpers/resolver', 'ember-qunit'], function (exports, _parchWebTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_parchWebTestsHelpersResolver['default']);\n});","define('parch-web/tests/unit/routes/getting-started/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:getting-started/index', 'Unit | Route | getting started/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('parch-web/tests/unit/routes/getting-started/page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:getting-started/page', 'Unit | Route | getting started/page', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('parch-web/tests/unit/routes/guide/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:guide/index', 'Unit | Route | guide/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('parch-web/tests/unit/routes/guide/page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:guide/page', 'Unit | Route | guide/page', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('parch-web/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('parch-web/tests/unit/services/scroller-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:scroller', 'Unit | Service | scroller', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","/* jshint ignore:start */\n\nrequire('parch-web/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}